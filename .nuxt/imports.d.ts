export { isVue2, isVue3 } from 'vue-demi';
export { useAsyncData, useLazyAsyncData, useNuxtData, refreshNuxtData, clearNuxtData, defineNuxtComponent, useNuxtApp, defineNuxtPlugin, definePayloadPlugin, reloadNuxtApp, useRuntimeConfig, useState, clearNuxtState, useFetch, useLazyFetch, useCookie, useRequestHeaders, useRequestEvent, useRequestFetch, useRequestURL, setResponseStatus, setPageLayout, onNuxtReady, useRouter, useRoute, defineNuxtRouteMiddleware, navigateTo, abortNavigation, addRouteMiddleware, showError, clearError, isNuxtError, useError, createError, defineNuxtLink, useAppConfig, updateAppConfig, defineAppConfig, preloadComponents, preloadRouteComponents, prefetchComponents, loadPayload, preloadPayload, isPrerendered, definePayloadReducer, definePayloadReviver } from '#app';
export { onBeforeRouteLeave, onBeforeRouteUpdate, useLink } from '#vue-router';
export { withCtx, withDirectives, withKeys, withMemo, withModifiers, withScopeId, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, computed, customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref, watch, watchEffect, watchPostEffect, watchSyncEffect, isShallow, effect, effectScope, getCurrentScope, onScopeDispose, defineComponent, defineAsyncComponent, resolveComponent, getCurrentInstance, h, inject, hasInjectionContext, nextTick, provide, defineModel, defineOptions, defineSlots, mergeModels, toValue, useModel, useAttrs, useCssModule, useCssVars, useSlots, useTransitionState, Component, ComponentPublicInstance, ComputedRef, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode } from 'vue';
export { injectHead, useHead, useSeoMeta, useHeadSafe, useServerHead, useServerSeoMeta, useServerHeadSafe } from '@unhead/vue';
export { fetchBlogPreview, fetchBlogById, fetchBlogSettings } from '../composables/cmsBlog';
export { convertTags } from '../composables/cmsHelpers';
export { fetchHome } from '../composables/cmsHome';
export { fetchUslugiSettings, fetchContactsSettings, fetchAppsFormSettings } from '../composables/cmsOtherSettings';
export { fetchPortfolioPreview, fetchCategoriesPortfolio, fetchTagsPortfolio, fetchPortfolioById, fetchPortfolioSettings } from '../composables/cmsPortfolio';
export { fetchSeo, fetchKontekstnayaReklama } from '../composables/cmsUslugiProdvizhenie';
export { fetchGotovyeResenia, fetchNoCode, fetchIndividualnaya } from '../composables/cmsUslugiRazrabotka';
export { getImageUrl } from '../composables/getImageUrl';
export { splineScript } from '../composables/splineScript';
export { useDirectus } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectus';
export { useDirectusAuth } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectusAuth';
export { useDirectusCollections } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectusCollections';
export { useDirectusFiles } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectusFiles';
export { useDirectusItems } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectusItems';
export { useDirectusNotifications } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectusNotifications';
export { useDirectusRevisions } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectusRevisions';
export { useDirectusToken } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectusToken';
export { useDirectusUrl } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectusUrl';
export { useDirectusUser } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectusUser';
export { useDirectusUsers } from '../node_modules/nuxt-directus/dist/runtime/composables/useDirectusUsers';
export { useSwiper, useSwiperSlide } from 'swiper/vue';
export { Navigation as swiper-slNavigation, Pagination as swiper-slPagination } from 'swiper/modules';
export { useImage } from '../node_modules/@nuxt/image-edge/dist/runtime/composables';
export { usePinia } from '../node_modules/@pinia/nuxt/dist/runtime/composables';
export { definePageMeta } from '../node_modules/nuxt/dist/pages/runtime/composables';